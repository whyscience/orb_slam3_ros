%YAML:1.0

#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------
File.version: "1.0"

Camera.type: "KannalaBrandt8"

#cam0:
#  cam_overlaps: []
#  camera_model: omni
#  distortion_coeffs: [-0.2164183579012296, 1.2118917641657263, 0.011930445978063219, -0.01990071772631688]
#  distortion_model: radtan
#  intrinsics: [2.629884563261398, 1257.5082822077213, 1256.2141907559333, 339.4420229585856, 219.75586079455894]
#  resolution: [640, 480]
#  rostopic: /camera/live_view_back

#intrinsics: [3.096001147157352, 1379.1898763183542, 1376.2989876891013, 323.9129385869879, 216.993007987697]
Camera1.fx: 1379.1898763183542
Camera1.fy: 1376.2989876891013
Camera1.cx: 323.9129385869879
Camera1.cy: 216.993007987697

Camera1.k1: -0.2164183579012296
Camera1.k2: 1.2118917641657263
Camera1.k3: 0.011930445978063219
Camera1.k4: -0.01990071772631688

# Camera resolution
Camera.width: 640
Camera.height: 480

# Camera frames per second
Camera.fps: 30

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 1

# Image scale, it changes the image size to be processed (<1.0: reduce, >1.0: increase)
Camera.imageScale: 1.0

# T_ic: (cam0 to imu0):
#  [[-0.99952963 0.02035943 0.02293516 -0.00000716]
#    [ 0.02029403 0.99978931 -0.00308068 -0.00261071]
#    [-0.02299305 -0.00261379 -0.99973221 -0.02563756]
#    [ 0. 0. 0. 1.]]
#timeshift cam0 to imu0: [s] (t_imu = t_cam + shift)
#  0.08527675849839539

#如果您使用 Kalibr 进行 Camera-IMU 外部校准，为了在立体惯性模式下运行 ORB-SLAM3，您需要设置两个矩阵：
#IMU.T_b_c1：这是从左相机坐标系到 IMU 坐标系的变换（左相机相对于 IMU 坐标系的姿势）。在 Kalibr 的报告中，它对应于T_ic:  (cam0 to imu0)。
# Transformation from camera to body-frame (imu)
IMU.T_b_c1: !!opencv-matrix
  rows: 4
  cols: 4
  dt: f
  data: [-0.99952963, 0.02035943, 0.02293516, -0.00000716,
         0.02029403, 0.99978931, -0.00308068, -0.00261071,
         -0.02299305, -0.00261379, -0.99973221, -0.02563756,
         0.0, 0.0, 0.0, 1.0]

##Accelerometers
#accelerometer_noise_density: 1.4516759743143148e-02   #Noise density (continuous-time)
#accelerometer_random_walk:   8.6660738806690937e-04   #Bias random walk
##Gyroscopes
#gyroscope_noise_density:     1.3034847149908269e-03   #Noise density (continuous-time)
#gyroscope_random_walk:       7.8724489070247425e-06   #Bias random walk

# IMU noise (Use those from VINS-mono)
IMU.NoiseGyro:  6.3556731185756383e-04 # rad/s^0.5
IMU.NoiseAcc: 1.1087018922858969e-02 # m/s^1.5
IMU.GyroWalk: 2.1089817634446355e-05 # rad/s^1.5
IMU.AccWalk: 5.9028460979728260e-04 # m/s^2.5
IMU.Frequency: 100.0


#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1000

# ORB Extractor: Scale factor between levels in the scale pyramid
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1.0
Viewer.GraphLineWidth: 0.9
Viewer.PointSize: 2.0
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3.0
Viewer.ViewpointX: 0.0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -3.5
Viewer.ViewpointF: 500.0
